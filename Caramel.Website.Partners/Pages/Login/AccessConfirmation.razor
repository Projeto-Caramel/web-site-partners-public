@page "/confirmation"

@using Caramel.Website.Partners.Layout.Components.Custom
@using Caramel.Website.Partners.Models.Requests
@using Caramel.Website.Partners.Models.Requests.Auth
@using Caramel.Website.Partners.Models.Responses
@using System.Text.Json
@using System.Text.Encodings.Web
@using Caramel.Website.Partners.Models.Responses.Auth
@using System.Net
@inject HttpService httpService
@inject NavigationManager Navigator
@inject ISessionStorageService sessionStorage

<PageTitle>Confirmação de Acesso</PageTitle>

<PreviousPageLink Class="previous-page-link-desktop" />

<div class="card-login">

    <img src="img/wave.svg" alt="wave-img" class="wave-img-mobile" />

    <div class="card-body">
        <PreviousPageLink Class="previous-page-link-mobile" />
        <div class="progress w-100 mb-4">
            <div class="progress-bar" role="progressbar" style="width: 50%" aria-valuenow="1" aria-valuemin="0" aria-valuemax="3"></div>
        </div>

        <h2 class="card-title text-center mb-4">Confirmação de Acesso</h2>
        <p class="text-center">Digite seu <span>Email</span> e <span>Senha Inicial</span> para confirmar sua identidade.</p>

        <EditForm Model="@request" OnValidSubmit="HandleConfirmation">
            <div class="mb-3">
                <label for="Email" class="form-label login-label">Email</label>
                <InputText @bind-Value="request.Email" type="email" id="Email" class="form-control login-input" placeholder="Digite seu Email..." required />
            </div>

            <div class="mb-3">
                <label for="Password" class="form-label login-label">Senha</label>
                <InputText @bind-Value="request.Password" type="password" id="Password" class="form-control login-input" placeholder="Digite sua Senha..." required />
            </div>

            <Button Type="BlazorBootstrap.ButtonType.Submit" class="btn login-btn w-100 mb-3" disabled="@isLoading">
                <span>
                    Confirmar
                </span>
                @if (isLoading)
                {
                    <i id="loader" class="bx bx-loader bx-spin"></i>
                }
            </Button>
        </EditForm>
    </div>
</div>

<CustomToastNotification @ref="notify" Messages="messages" />

@code {
    private bool isLoading = false;
    private CustomToastNotification notify;
    public List<ToastMessage> messages = new();
    private AuthRequest request = new AuthRequest();

    private JsonSerializerOptions jsonOptions = new JsonSerializerOptions
        {
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            WriteIndented = true,
            Encoder = JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        };

    private async Task HandleConfirmation()
    {
        isLoading = true;

        var result = await httpService.PostAsync<AuthRequest, AuthResponse>("/auth/partner/authenticate", request);

        if (result.IsSuccess)
        {
            sessionStorage.SetItem("id", result.Content.Token.Id);
            sessionStorage.SetItem("name", result.Content.Token.Name);
            sessionStorage.SetItem("token", result.Content.Token.Token);
            sessionStorage.SetItem("validTo", result.Content.Token.ValidTo);

            Navigator.NavigateTo("/update");
        }
        else if (result.StatusCode == HttpStatusCode.UnprocessableEntity)
        {
            notify.ShowMessage(ToastType.Warning, "Aviso", "Usuário ou Senha Incorretos!");
        }
        else
        {
            notify.ShowMessage(ToastType.Danger, "Erro", "Não foi possível realizar a Autenticação. Tente novamente mais tarde!");
        }

        isLoading = false;
    }

    #region SetPageName
    protected override void OnInitialized()
    {
        SetPageName();
    }

    private void SetPageName()
    {
        sessionStorage.SetItem("pageName", "Confirmação de Acesso");
    }
    #endregion
}
